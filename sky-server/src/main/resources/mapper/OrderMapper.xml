<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.mapper.OrderMapper">
    <insert id="submit" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time, checkout_time, pay_method,
                            pay_status, amount, remark, phone, address, user_name, consignee, cancel_reason,
                            rejection_reason, cancel_time, estimated_delivery_time, delivery_status, delivery_time,
                            pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{userName}, #{consignee}, #{cancelReason},
                #{rejectionReason}, #{cancelTime}, #{estimatedDeliveryTime}, #{deliveryStatus}, #{deliveryTime},
                #{packAmount}, #{tablewareNumber}, #{tablewareStatus});
    </insert>
    <update id="confirmOrder">

        update orders
        set status = 3
        where id = #{id};
    </update>
    <update id="completeOrder">
        update orders
        set status=5
        where id = #{id}
    </update>
    <update id="rejectionOrder">
        update orders
        <set>
            <if test="rejectionReason != null">rejection_reason=#{rejectionReason},</if>
            status =7
        </set>
        where id=#{id}
    </update>
    <update id="updateById">
        update orders
        <set>
            <if test="number != null">number = #{number},</if>
            <if test="status != null">status = #{status},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="addressBookId != null">address_book_id = #{addressBookId},</if>
            <if test="orderTime != null">order_time = #{orderTime},</if>
            <if test="checkoutTime != null">checkout_time = #{checkoutTime},</if>
            <if test="payMethod != null">pay_method = #{payMethod},</if>
            <if test="payStatus != null">pay_status = #{payStatus},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="consignee != null">consignee = #{consignee},</if>
            <if test="cancelReason != null">cancel_reason = #{cancelReason},</if>
            <if test="rejectionReason != null">rejection_reason = #{rejectionReason},</if>
            <if test="cancelTime != null">cancel_time = #{cancelTime},</if>
            <if test="estimatedDeliveryTime != null">estimated_delivery_time = #{estimatedDeliveryTime},</if>
            <if test="deliveryStatus != null">delivery_status = #{deliveryStatus},</if>
            <if test="deliveryTime != null">delivery_time = #{deliveryTime},</if>
            <if test="packAmount != null">pack_amount = #{packAmount},</if>
            <if test="tablewareNumber != null">tableware_number = #{tablewareNumber},</if>
            <if test="tablewareStatus != null">tableware_status = #{tablewareStatus},</if>
        </set>
        where id=#{id}
    </update>


    <update id="cancelById">
        update orders
        <set>
            <if test="status != null">status = #{status},</if>
            <if test="cancelReason != null">cancel_Reason = #{cancelReason},</if>
            <if test="cancelTime != null">cancel_Time = #{cancelTime},</if>
        </set>
        where id=#{id}
    </update>
    <update id="updateByStatusBeforeTime">
        update orders
        set status = 6
        where status=#{pendingPayment} and order_time <![CDATA[<]]> #{orderTime}
    </update>
    <update id="update">
        update orders
        set status= 5
        where status = #{deliveryInProgress}
    </update>
    <select id="getOrderStatistics" resultType="com.sky.vo.OrderStatisticsVO">
        #根据状态进行分组
        SELECT SUM(IF(status = 3, 1, 0)) as confirmed,
               SUM(IF(status = 4, 1, 0)) as deliveryInProgress,
               SUM(IF(status = 2, 1, 0)) as toBeConfirmed
        FROM orders
    </select>
    <select id="conditionSearchOrder" resultType="com.sky.entity.Orders">

        select id ,number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount,
        remark, phone, address, user_name, consignee, cancel_reason, rejection_reason, cancel_time,
        estimated_delivery_time, delivery_status, delivery_time, pack_amount, tableware_number, tableware_status
        from orders
        <where>
            <if test="number != null">and number like cancat ('%',#{number},'%')</if>
            <if test="status != null">and status = #{status}</if>
            <if test="orderTime != null">and order_time between #{beginTime} and #{endTime}</if>
        </where>
        order by order_time desc
    </select>
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id)
        from orders
        <where>
            <if test="begin != null">and order_time &gt; #{begin}</if>
            <if test="end != null">and order_time &lt; #{end}</if>
            <if test="status != null">and status=#{status}</if>
        </where>
    </select>
    <select id="sumByMap" resultType="java.lang.Double">
        select sum(amount)
        from orders
        <where>
            <if test="begin != null">and order_time &gt; #{begin}</if>
            <if test="end != null">and order_time &lt; #{end}</if>
            <if test="status != null">and status=#{status}</if>
        </where>
    </select>
    <select id="selectGoodsSales" resultType="com.sky.dto.GoodsSalesDTO">
        select od.name,sum(od.number) as number
        from order_detail od,orders o where od.order_id=o.id
        and o.status=5
        <if test="beginTime !=null">
            and o.order_time &gt; #{beginTime}
        </if>
        <if test="endTime !=null">
            and o.order_time &lt; #{endTime}
        </if>
        group by od.name
        order by number desc
        limit 0,10
    </select>
    <select id="selectOne" resultType="com.sky.entity.Orders">
        select id, number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark, phone, address, user_name, consignee, cancel_reason, rejection_reason, cancel_time, estimated_delivery_time, delivery_status, delivery_time, pack_amount, tableware_number, tableware_status
        from orders
        <where>
            <if test="number != null">and number = #{number}</if>
        </where>
    </select>
    <select id="selectByStatus" resultType="com.sky.entity.Orders">
        select id,
        number,
        status,
        user_id,
        address_book_id,
        order_time,
        checkout_time,
        pay_method,
        pay_status,
        amount,
        remark,
        phone,
        address,
        user_name,
        consignee,
        cancel_reason,
        rejection_reason,
        cancel_time,
        estimated_delivery_time,
        delivery_status,
        delivery_time,
        pack_amount,
        tableware_number,
        tableware_status
        from orders
        <where>
            <if test="status != null">and status = #{status}</if>
        </where>
        order by order_time desc

    </select>
    <select id="selectById" resultType="com.sky.entity.Orders">
        select id,
               number,
               status,
               user_id,
               address_book_id,
               order_time,
               checkout_time,
               pay_method,
               pay_status,
               amount,
               remark,
               phone,
               address,
               user_name,
               consignee,
               cancel_reason,
               rejection_reason,
               cancel_time,
               estimated_delivery_time,
               delivery_status,
               delivery_time,
               pack_amount,
               tableware_number,
               tableware_status
        from orders
        where id = #{id}
    </select>
    <select id="selectTurnoverStatistics" resultType="java.util.Map">
        select temp.time,
        ifnull(
        (select sum(amount)
        from orders
        where order_time between temp.time and date_add(temp.time, interval 1 day)
        and pay_status = 1),0
        ) amount
        from (
        <foreach collection="localDates" item="localDate" separator=" union all " open="(" close=")">
            select #{localDate} time
        </foreach>
        ) temp;
    </select>
</mapper>